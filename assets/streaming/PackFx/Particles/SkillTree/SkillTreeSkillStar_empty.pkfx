Version = 1.9.4.30080;
CParticleEffect	$LOCAL$/Resource
{
	EditorInfosPosition = int2(73, 52);
	OnSpawn = "$LOCAL$/Spawner";
	CustomAttributes = "$LOCAL$/_GlobalAttributes";
	Autostart = true;
}
CActionFactoryWithChilds	$LOCAL$/Spawner
{
	EditorInfosPosition = int2(-162, -81);
	ChildList = 
	{
		"$LOCAL$/Starlight",
	};
}
CParticleAttributeList	$LOCAL$/_GlobalAttributes
{
	EditorInfosPosition = int2(-599, -20);
	AttributeList = 
	{
		"$LOCAL$/CParticleAttributeDeclaration_DBDA839C",
		"$LOCAL$/CParticleAttributeDeclaration_1BCEDEFE",
	};
}
CShapeDescriptor	$LOCAL$/CShapeDescriptor_05FF2204
{
	ShapeType = SPHERE;
}
CParticleAttributeDeclaration	$LOCAL$/CParticleAttributeDeclaration_DBDA839C
{
	AttributeName = "RGB";
	AttributeType = float4;
	DefaultValueF4 = float4(5.0000000e-001, 5.0000000e-001, 5.0000000e-001, 5.0000000e-001);
	HasMin = true;
	HasMax = true;
	MaxValueF4 = float4(1.0000000e+000, 1.0000000e+000, 1.0000000e+000, 1.0000000e+000);
	MaxValueI4 = int4(10, 10, 10, 10);
}
CParticleAttributeDeclaration	$LOCAL$/CParticleAttributeDeclaration_1BCEDEFE
{
	AttributeName = "Power";
	HasMin = true;
	HasMax = true;
	MaxValueF4 = float4(1.0000000e+001, 1.0000000e+000, 1.0000000e+000, 1.0000000e+000);
	MaxValueI4 = int4(10, 10, 10, 10);
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_2FF1CF89
{
	Expression = "function void	Eval()
{
	
}
";
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_38F45F59
{
	FieldName = "RandomRGB";
	FieldType = float3;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_4F7D5490
{
	FieldName = "RandomRGB";
	FieldType = float3;
}
CActionFactoryParticleSpawnerBase	$LOCAL$/Starlight
{
	Descriptor = "$LOCAL$/CParticleDescriptor_AB7EC2E2";
	Infinite = true;
	DurationInSeconds = 2.0000000e+000;
	SpawnCount = 4.0000000e+000;
}
CParticleDescriptor	$LOCAL$/CParticleDescriptor_AB7EC2E2
{
	Renderer = "$LOCAL$/CParticleRenderer_Billboard_98BF80E7";
	CustomFields = 
	{
		"$LOCAL$/CParticleFieldDeclaration_01646094",
		"$LOCAL$/CParticleFieldDeclaration_32074B2F",
	};
	Samplers = 
	{
		"$LOCAL$/CParticleSamplerProceduralTurbulence_59018FBC",
		"$LOCAL$/CParticleSamplerCurve_E6410E3F",
	};
	SpawnEvaluator = "$LOCAL$/CCompilerSyntaxNodeExpression_23D34A4D";
	States = 
	{
		"$LOCAL$/CParticleState_ABE52E36",
	};
}
CParticleRenderer_Billboard	$LOCAL$/CParticleRenderer_Billboard_98BF80E7
{
	CustomName = "Billboard";
	Diffuse = "Textures/FX/BlackStar.png";
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_01646094
{
	FieldName = "Color";
	FieldType = float4;
}
CParticleFieldDeclaration	$LOCAL$/CParticleFieldDeclaration_32074B2F
{
	FieldName = "Target";
	FieldType = float3;
}
CParticleSamplerProceduralTurbulence	$LOCAL$/CParticleSamplerProceduralTurbulence_59018FBC
{
	SamplerName = "AlphaTurb";
	Wavelength = 2.0000000e+000;
	Strength = 5.0000000e-001;
	Octaves = 1;
	Lacunarity = 0.0000000e+000;
	Gain = 0.0000000e+000;
	TimeScale = 1.0000000e-003;
	TimeRandomVariation = 1.0000000e+000;
	FlowFactor = 2.0000000e+000;
	DivergenceFactor = 2.0000000e+000;
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_23D34A4D
{
	Expression = "function void	Eval()
{
	Life = rand(0.5,1);
	Size = rand(1,1.1);
	Color = float4(1.0);
	Target = float3(rand(1,10),rand(1,10),rand(1,10));
}
";
}
CParticleState	$LOCAL$/CParticleState_ABE52E36
{
	StateName = "Evolvers";
	Evolvers = 
	{
		"$LOCAL$/Script_1",
	};
}
CParticleEvolver_Script	$LOCAL$/Script_1
{
	CustomName = "Script";
	Expression = "$LOCAL$/CCompilerSyntaxNodeExpression_903292D5";
}
CCompilerSyntaxNodeExpression	$LOCAL$/CCompilerSyntaxNodeExpression_903292D5
{
	Expression = "function void	Eval()
{
	Color = RGB * AlphaCurve.sample(LifeRatio);
}
";
}
CParticleSamplerCurve	$LOCAL$/CParticleSamplerCurve_E6410E3F
{
	SamplerName = "AlphaCurve";
	Times = 
	{
		0.0000000e+000,
		5.0000000e-001,
		1.0000000e+000,
	};
	FloatValues = 
	{
		4.9429536e-003,
		5.8721614e-001,
		6.4638853e-003,
	};
	FloatTangents = 
	{
		0.0000000e+000,
		0.0000000e+000,
		1.1368742e-003,
		1.1368742e-003,
		0.0000000e+000,
		0.0000000e+000,
	};
	MinLimits = float4(0.0000000e+000, 0.0000000e+000, 0.0000000e+000, 0.0000000e+000);
}
